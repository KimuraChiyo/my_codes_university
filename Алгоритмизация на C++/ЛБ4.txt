#include <iostream>  
#include <locale.h>
//1.1 and 1.11
/*int main() {
	setlocale(LC_ALL, "Russian");
	int x, b;
	std::cout << "Введите целое число x: "; std::cin >> x;
	//while ((x & 0xf) != 0) {x = x << 1;std::cout << "После преобразования х равен " << x;}
m1: {
	b = x & 0xf;
	if (b == 0){
		std::cout << "После преобразования х равен " << x;
		return 11;
	}
	else{
		x = x << 1;
		goto m1;
	}
	}
}*/
//1.2 and 1.12
/*int main() {
	setlocale(LC_ALL, "Russian");
	int x, b;
	std::cout << "Введите целое число x: "; std::cin >> x;
	//while ((x & 0x1f) != 0) {x = x << 1;std::cout << "После преобразования х равен " << x;}
m1: {
	b = x & 0x1f;
	if (b == 0){
		std::cout << "После преобразования х равен " << x;
		return 12;
	}
	else{
		x = x << 1;
		goto m1;
	}
	}
}*/
//1.3
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x &= 0xaaaa;
	std::cout << "После приведения это число равно: " << x;
	return 13;
}*/
//1.4
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x &= 0x5555;
	std::cout << "После приведения это число равно: " << x;
	return 14;
}*/
//1.5
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x &= 0xff8f;
	std::cout << "После приведения это число равно: " << x;
	return 15;
}*/
//1.6
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x &= 0xfff1;
	std::cout << "После приведения это число равно: " << x;	
	return 16;
}*/
//1.7
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x |= 0x0030;
	std::cout << "После приведения это число равно: " << x;
	return 0;
}*/
//1.8
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned short int x;
	std::cout << "Введите целое число x: "; std::cin >> x;
	x |= 0x0015;
	std::cout << "После приведения это число равно: " << x;
	return 18;
}
//Ответ на указание: они будут кратные четырём
*/
//1.9
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int a, b, ost;
	std::cout << "Введите целое число a: "; std::cin >> a;
	std::cout << "Введите целое число b: "; std::cin >> b;
	ost = a % b; std::cout << "Остаток от деления а на b равен " << ost << '\n';
	std::cout << "После преобразования число равно " << (ost & ~a);
	return 0;
}*/
//1.10
/*int main() {
	setlocale(LC_ALL, "Russian");
	int x;
	std::cout << "Введите х: "; std::cin >> x;
	if (((x & 0xf00) != 0) && ((x & 0x0ff) == 0))
		std::cout << "Делится и на 256, и на 64";
	else {
		if ((x & 0x0c0) != 0)
			std::cout << "Делится на 64, не делится на 256";
		else
			std::cout << "Не делится и на 256, и на 64";
	}
	return 110;
}*/
//2.1
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, k, c, l = 1;
	std::cout << "Введите число: "; std::cin >> a;
	std::cout << "Введите число cдвига: "; std::cin >> k;
m1: {
	if (k > 0) {
		std::cout << "Последней цифрой двоичного числа была " << (a & 0x1) << '\n';
		c = (a & 0x1) << 15;
		a = ((a >> 1) | c);
		k -= 1;
		std::cout << "После " << l << "-го сдвига на один бит число стало равно " << a << '\n';
		l += 1;
		goto m1;
	}
	else
		return 21;
	}
}*/
//2.2
/*
двойной перевод 63239
63293 -> 56759 -> 30623
1111 0111 0011 1101
сохраняем четные биты
_1_1 _1_1 _0_1 _1_1
сохраняем нечетные биты
1_1_ 0_1_ 0_1_ 1_0_
сохраняем первый нечетный бит 0х8000 и сдвигаем на 14 вправо
перенос неч битов на два влево и складываем c первым преобразованным битом
1_0_ 1_0_ 1_1_ 0_1_
суммируем с четными битами
1101 1101 1011 0111
переносим нечет биты
0_1_ 0_1_ 1_0_ 1_1_
сохр с четными битами
0111 0111 1001 1111
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, k, c, l = 1, chet, nechet;
	std::cout << "Введите число: "; std::cin >> a;
	std::cout << "Введите число cдвига: "; std::cin >> k;
	chet = a & 0x5555;
	nechet = a & 0xaaaa;
m1: {
	if (k > 0) {
		std::cout << "Первой нечетной цифрой двоичного числа была " << (a & 0x8000) << '\n';
		c = (a & 0x8000) >> 14;
		nechet = (((nechet & 0x3fff) << 2) | c);
		k -= 1;
		std::cout << "После " << l << "-го сдвига на один бит число стало равно " << (nechet | chet) << '\n';
		l += 1;
		goto m1;
	}
	else
		return 22;
	}
}*/
//2.3
/*
10110010 (b2(16) - 178(10))
чет биты -> нечет биты
_0_1 _0_0 -> 0_1_ 0_0_
нечет биты -> чет биты
1_1_ 0_1_ -> _1_1 _0_1
0111 0001 (71(16) - 113(10))
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, chet, nechet, b = 0;int chet_2, nechet_2;
	std::cout << "Введите а: "; std::cin >> a;
	chet = a & 0x5555;
	nechet = a & 0xaaaa;
	chet_2 = nechet >> 1;
	nechet_2 = chet << 1;
	b = (chet_2 | nechet_2);
	std::cout << "Итоговое число равно " << b;
	return 23;
}*/
//2.4
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, first, second;
	std::cout << "Введите число: "; std::cin >> a;
	first = (a & 0xff00) >> 8;
	second = (a & 0x00ff) << 8;
	a = first | second;
	std::cout << "После преобразования число равно " << a;
	return 24;
}*/
//2.5
/*
1011 0011 1100 0101 (b3с5(16) - 46021(10))
четные биты
_0_1 _0_1 _1_0 _1_1
нечетные биты = четные биты
1_1_ 0_1_ 1_0_ 0_0_ = 0_1_ 0_1_ 1_0_ 1_1_
0011 0011 1100 1111 (33cf(16) - 13263(10))
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, nechet, chet;
	std::cout << "Введите число: "; std::cin >> a;
	nechet = (a & 0x5555) << 1;
	a = (a & 0x5555) | nechet;
	std::cout << "Итоговое число равно " << a;
	return 25;
}*/
//2.6
/*
слишком запарное задание
но простое
если делать нехуй - всегда пожалуйста
*/
//2.7
/*
1010 1010 - 170(10)
1 3 5 7 биты
_0_0 _0_0
0 2 4 6 биты
1_1_ 1_1_
0101 0101 - 85(10)
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int a, otfs, ztfs;
	std::cout << "Введите число: "; std::cin >> a;
	otfs = (a & 0xaa) >> 1;
	ztfs = (a & 0x55) << 1;
	a = a & 0xff00;
	a = a | otfs | ztfs;
	std::cout << "После преобразования число равно " << a;
	return 0;
}*/
//2.8
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int a, b, c;
	std::cout << "Введите первое число: "; std::cin >> a;
	std::cout << "Введите второе число: "; std::cin >> b;
	c = (a >> 1) & 0x5555;
	a &= 0xaaaa;
	b |= c;
	std::cout << "После преобразования второе число равно " << b;
	return 28;
}*/
//2.9
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int a, b, c;
	std::cout << "Введите первое число: "; std::cin >> a;
	std::cout << "Введите второе число: "; std::cin >> b;
	c = (b >> 1) & 0x5555;
	a &= 0xaaaa;
	a |= c;
	std::cout << "После преобразования первое число равно " << a;
	return 0;
}*/
//2.10-12
/*
МАКСИМАЛЬНО ХУЁВЫЕ СХЕМЫ 
Я ИХ РОТ ЕБАЛ
нихуя не понял
*/
//3.1
/*
находим маску для последних k чисел
копируем последние k символов
и а ксорим с последниями k символами
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int k, n, k_2 = 1, n_2 = 1, k_1, n_1;
	std::cout << "Введите k: "; std::cin >> k;
	std::cout << "Введите n(n != k): "; std::cin >> n;
	k_1 = k;
	n_1 = n;
m1: {
	if (k > 0) {
		k_2 <<= 1;
		k -= 1;
		goto m1;
	}
	else 
		goto m2;
	}
m2: {
	if (n > 0) {
		n_2 <<= 1;
		n -= 1;
		goto m2;
	}
	else
		goto m3;
    }
m3: {
	std::cout << "2^" << k_1 << " + 2^" << n_1 << " = " << (k_2 | n_2);
	return 31;
	}
}*/
//3.2
/*
сначала сдвигаем на введенное число вправо, затем влево на это же число
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a; unsigned k, b = 1, k_1 = 1;
	std::cout << "Введите а: "; std::cin >> a;
	std::cout << "Введите k: "; std::cin >> k;
m1: {
	if (k > 1) {
		b <<= 1;
		b |= 1;
		k -= 1;
		k_1 += 1;
		goto m1;
	}
	else
		goto m2;
	}
m2: {
	std::cout << "После обнуления последних " << k_1 << " элементов число будет равно " << (a ^ (a & b));
	return 32;
}
}*/
//3.3
/*
вводим число
вводим число к 
сдвигаем единицу на к влево и складываем с первым числом
*/
//3.4
/*
вводим число
вводим число к
сдвигаем единицу на к влево и xorим с первым числом
*/
//3.5

//3.6
/*
при каждом сдвиге единица на один бит влево нужно прибавлять единицу
получим маску последних к бит числа А
*/
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a; unsigned k, b = 1, k_1 = 1;
	std::cout << "Введите а: "; std::cin >> a;
	std::cout << "Введите k: "; std::cin >> k;
m1: {
	if (k > 1) {
		b <<= 1;
		b |= 1;
		k -= 1;
		k_1 += 1;
		goto m1;
	}
	else
		goto m2;
	}
m2: {
	std::cout << "Последние " << k_1 << " бит числа равны " << (a & b);
	return 36;
}
}*/
//3.7
#include <locale.h>
#include <iostream>
int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int num, k = 0, rev_k;
	std::cout << "Введите число: "; std::cin >> num;
	std::cout << "Двоичное представление этого числа: ";
	if (num == 0) {
		std::cout << 0;
		return 0;
	}
m0: {
	rev_k = (~k) & 0x1f;
	if (((num & (0x1 << rev_k)) >> rev_k) == 1)
		goto m1;
	k += 1;
	if (k == 32)
		return 0;
	goto m0;
	}
m1: {
	rev_k = (~k) & 0x1f;
	std::cout << ((num & (0x1 << rev_k)) >> rev_k);
	k += 1;
	if (k == 32)
		return 0;
	goto m1;
	}
}
//3.8
/*int main() {
	setlocale(LC_ALL, "Russian");
	int a, b;
	std::cout << "Введите число а: "; std::cin >> a;
	std::cout << "Введите число b: "; std::cin >> b;
	a = ((a << 3) + a) << 2;
	b >>= 4;
	std::cout << "36 * a = " << a << std::endl;
	std::cout << "[b / 16] = " << b << std::endl;
	std::cout << "Их сумма равна " << a + b << std::endl;
	std::cout << "Их сумма mod32 равна " << ((a + b) & 0x1f);
}*/
//3.9

//3.10

//3.11

//3.12

//ДЗ1
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int x, y, z;
	std::cout << "Введите z: "; std::cin >> z;
	x = z & 0x1f;
	z = z >> 5;
	y = z & 0x3f;
	std::cout << "x = " << x << std::endl;
	std::cout << "y = " << y;
	return 1;
}*/
//ДЗ2
/*int main() {
	setlocale(LC_ALL, "Russian");
	unsigned int x, y, z;
	std::cout << "Введите z: "; std::cin >> z;
	std::cout << "Введите x(x<64): "; std::cin >> x;
	std::cout << "Введите y(y<128): "; std::cin >> y;
	if (x > 63) {
		std::cout << "Вы ввели х больше ожидаемого, будет использован x(mod 64)";
		x = x & 0x3f;
	}
	if (y > 128) {
		std::cout << "Вы ввели y больше ожидаемого, будет использован y(mod 128)";
		y = y & 0x7f;
	}
	z = z & 0xc0;
	z = z | x;
	z = z & 0xf803f;
	z = z | (y << 6);
	std::cout << "z = " << z;
	return 1;
}*/